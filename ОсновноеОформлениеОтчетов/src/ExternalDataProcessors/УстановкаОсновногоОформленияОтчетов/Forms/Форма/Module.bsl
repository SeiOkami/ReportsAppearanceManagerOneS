// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДоступныеМакеты();
	ОбновитьДанные();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОсновнойМакетПользователейПриИзменении(Элемент)
	
	УстановитьОбщийМакетОформления(ОсновнойМакетПользователей);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнойМакетТекущегоПользователяПриИзменении(Элемент)
	
	УстановитьМакетОформленияПользователя(ОсновнойМакетТекущегоПользователя);
	
	НайденныеСтроки = МакетыПользователей.НайтиСтроки(Новый Структура("ИмяПользователя", ИмяТекущегоПользователя));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		НайденнаяСтрока.Макет = ОсновнойМакетТекущегоПользователя;
		ЗаполнитьПризнакМакетУстановлен(НайденнаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМакетыПользователей

&НаКлиенте
Процедура МакетыПользователейМакетПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.МакетыПользователей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМакетОформленияПользователя(ТекущиеДанные.Макет, ТекущиеДанные.ИмяПользователя);
	
	ЗаполнитьПризнакМакетУстановлен(ТекущиеДанные);
	
	Если ТекущиеДанные.ИмяПользователя = ИмяТекущегоПользователя Тогда
		ОсновнойМакетТекущегоПользователя = ТекущиеДанные.Макет;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда_ОбновитьДанные(Команда)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_ОбновитьМакетыПользователей(Команда)
	
	ЗаполнитьМакетыОформленияПользователей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанные()
	
	ИмяТекущегоПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	ОсновнойМакетПользователей = ОформлениеОтчетов.ПолучитьОбщийМакетОформления();
	ОсновнойМакетКонфигурации  = Метаданные.ОсновнойМакетОформленияОтчета;
	
	ОсновнойМакетТекущегоПользователя = ОформлениеОтчетов.ПолучитьМакетОформленияПользователя();
	
	ДоступноИзменениеДляДругихПользователей = ПравоДоступа("АдминистрированиеДанных", Метаданные);
	
	Элементы.ОсновнойМакетПользователей.ТолькоПросмотр = НЕ ДоступноИзменениеДляДругихПользователей;
	Элементы.МакетыПользователей.Видимость = ДоступноИзменениеДляДругихПользователей;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеМакеты()
	
	ДоступныеМакеты.Очистить();
	
	//Не нашёл как их получить программно
	ДобавитьДоступныйМакетОформления(""        , "<Не установлено>");
	ДобавитьДоступныйМакетОформления("БезОформления", "Без оформления");
	ДобавитьДоступныйМакетОформления("Основной", "Основной");
	ДобавитьДоступныйМакетОформления("Яркий"   , "Яркий");
	ДобавитьДоступныйМакетОформления("Море"    , "Море");
	ДобавитьДоступныйМакетОформления("Арктика" , "Арктика");
	ДобавитьДоступныйМакетОформления("Зеленый" , "Зеленый");
	ДобавитьДоступныйМакетОформления("Античный", "Античный");
	
    Для Каждого МакетОформления Из Метаданные.ОбщиеМакеты Цикл
		
		Если МакетОформления.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.МакетОформленияКомпоновкиДанных Тогда
			
			ДобавитьДоступныйМакетОформления(МакетОформления.Имя, МакетОформления.Представление());
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьДоступныеМакетыЭлемента(Элементы.ОсновнойМакетПользователей);
	ЗаполнитьДоступныеМакетыЭлемента(Элементы.ОсновнойМакетТекущегоПользователя);
	ЗаполнитьДоступныеМакетыЭлемента(Элементы.МакетыПользователейМакет);
	
КонецПроцедуры

// Добавить доступный макет оформления.
// 
// Параметры:
//  Имя - Строка
//  Представление - Строка
&НаСервере
Процедура ДобавитьДоступныйМакетОформления(Имя, Представление)
	
	//@skip-check typed-value-adding-to-untyped-collection - Баг ЕДТ
	ДоступныеМакеты.Добавить(Имя, Представление);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеМакетыЭлемента(ЭлементФормы)
	
	СписокВыбора = ЭлементФормы.СписокВыбора; //СписокЗначений из Строка
	СписокВыбора.Очистить();
	Для Каждого ЭлементСписка Из ДоступныеМакеты Цикл
		СписокВыбора.Добавить(Строка(ЭлементСписка.Значение), ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОбщийМакетОформления(ИмяМакета)
	
	ОформлениеОтчетов.УстановитьОбщийМакетОформления(ИмяМакета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьМакетОформленияПользователя(ИмяМакета, ИмяПользователя = Неопределено)
	
	ОформлениеОтчетов.УстановитьМакетОформленияПользователя(ИмяМакета, ИмяПользователя);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетыОформленияПользователей()
	
	МакетыПользователей.Очистить();
	
	Для Каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		
		ТекущиеДанные = МакетыПользователей.Добавить();
		ТекущиеДанные.ИмяПользователя = ПользовательИБ.Имя;
		ТекущиеДанные.ПолноеИмяПользователя = ПользовательИБ.ПолноеИмя;
		ТекущиеДанные.Макет = ОформлениеОтчетов.ПолучитьМакетОформленияПользователя(ПользовательИБ.Имя);
		ЗаполнитьПризнакМакетУстановлен(ТекущиеДанные);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПризнакМакетУстановлен(ТекущиеДанные)
	
	ТекущиеДанные.МакетУстановлен = НЕ ПустаяСтрока(ТекущиеДанные.Макет);
	
КонецПроцедуры

#КонецОбласти


